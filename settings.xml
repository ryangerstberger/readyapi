<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="a59719ef-fffd-46e2-814b-3c512d752bed" created="3.6.0" activeEnvironment="RestKata" name="RestKata-TestProject" resourceRoot="" compositeProjectFormat="1.3" updated="3.6.0" encryptionMode="Not encrypted" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="a59719ef-fffd-46e2-814b-3c512d752bedfileName">RestKata-TestProject-readyapi-project</con:setting></con:settings><con:requirements/><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:jmsConnectionContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest"><con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script></con:eventHandlers><con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep"><con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script></con:eventHandlers><con:environment id="c49dbe33-b6c2-4564-8897-a52323d4af1d" name="RestKata" index="0"><con:service type="REST" name="http://localhost:8080"><con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">http://localhost:8080</con:endpoint></con:service><con:databaseConnectionContainer/><con:jmsConnectionContainer/></con:environment><con:environment id="97df5309-a914-451d-9ebc-353ecbf53abf" name="Student" index="1"><con:service type="REST" name="http://localhost:8080"><con:endpoint authProfile="No Authorization" username="" password="" domain="" incomingWss="" outgoingWss="" wssTimeToLive="" wssType="" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">http://localhost:8081</con:endpoint></con:service><con:databaseConnectionContainer/><con:jmsConnectionContainer/></con:environment><con:environment id="79672911-ded5-4417-a803-6a9272491aec" name="Teacher" index="2"><con:service type="REST" name="http://localhost:8080"><con:endpoint authProfile="No Authorization" username="" password="" domain="" incomingWss="" outgoingWss="" wssTimeToLive="" wssType="" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">http://localhost:8082</con:endpoint></con:service><con:databaseConnectionContainer/><con:jmsConnectionContainer/></con:environment><con:authRepository/><con:environmentSpec><con:entry environmentId="c49dbe33-b6c2-4564-8897-a52323d4af1d"><con:authProfile>No Authorization</con:authProfile></con:entry><con:entry environmentId="97df5309-a914-451d-9ebc-353ecbf53abf"><con:authProfile>No Authorization</con:authProfile></con:entry><con:entry environmentId="79672911-ded5-4417-a803-6a9272491aec"><con:authProfile>No Authorization</con:authProfile></con:entry></con:environmentSpec><con:tags/></con:soapui-project>